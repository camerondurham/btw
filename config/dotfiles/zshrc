#!/bin/bash

if [ -e "$HOME/.internal_envs" ]; then
    source "$HOME/.internal_envs"
fi


# ---------- begin notetaking
#
# No arguments: `git status`
# With arguments: acts like `git`
g() {
  if [[ $# > 0 ]]; then
    git $@
  else
    git status
  fi
}


cd() {
    # builtin makes the cd inside the function invoke the builtin cd command
    # rather than trying to call the function recursively.
    builtin cd "$@" && ls --color=auto;
}

so() {
    if [[ -e "$HOME/.zshrc" ]]; then
        source "$HOME/.zshrc"
    fi
}

# path exports

export XDG_CONFIG_HOME="$HOME/.config"
export EDITOR="nvim"

# get filename for today's notes
# open in other editors with `code $(ttf)`
ttf() {
    local datefmt
    datefmt=$(date +"%Y-%m-%d")
    local notespath
    notespath=${NOTES:-$HOME}
    local filename
    filename="TODO_$datefmt.md"
    filepath="$notespath/$filename"
    nvim "$filepath"
    echo "$filepath"
}

# todo today
tt() {
    local filepath
    filepath=$(ttf)
    nvim "$filepath"
}


# snippets
ss() {
    if [[ ! -z "$NOTES_BASE" ]] && [[ ! -z "$SNIP" ]]; then
        nvim "$SNIP"
        echo "edited snippets: $SNIP"
    else
        echo "NOTES envvar not set, cannot edit snippets!"
    fi
}

# ---------- end notetaking

# ---------- pretty print

function pp() {
    if [[ "$#" != "1" ]]; then
        echo -e "\n\tplease provide a single file name to pretty print\n"
    else
        cat "$1" | python -m json.tool
    fi
}

function lp() {
    local ports
    if [[ "$#" != "0" ]]; then
        ports="$1"
    else
        ports="8080,8443" # kill processes using normal ports for Bobcat
    fi

    processes=$(lsof -i:"${ports}")

    if [ ! -z "$processes" ]; then
        echo $processes
    else
        echo "no processes running on port(s) $ports"
        return
    fi
}

alias listports=lp

function kports() {
    local ports
    if [[ "$#" != "0" ]]; then
        ports="$1"
    else
        ports="8080,8443" # kill processes using normal ports for Bobcat
    fi

    processes=$(lsof -i:"${ports}")
    if [ ! -z "$processes" ]; then
        # kill using open ports, only print PIDs
        kill -HUP `lsof -t -i:$ports`
    else
        echo "no processes running on port(s) $ports"
        return
    fi
}

alias killports=kports

function writescript() {

    local filename
    if [[ "$#" != "0" ]]; then
        filename=$1
    else
        echo "give me a filename, idiot!"
        return
    fi
    $EDITOR "$filename" && chmod +x "$filename"
    echo "finished writing script, $filename is executable"
}


# ---------- zsh prompt
# $'\n' forces new line
export PS1=""$'\n'"%1~"$'\n'"; "

if [[ -e "$HOME/.config/aliases/aliases" ]]; then
    source "$HOME/.config/aliases/aliases"
else
    echo "Aliases not sourced"
fi


if [[ -e "$HOME/setup/tools" ]]; then
    export PATH=$PATH:$HOME/setup/tools
fi

